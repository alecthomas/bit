dest = ./build
version = %(git describe --tags --always)%

virtual k8s-postgres:
  < k8s-apply(manifest="db.yml", resource="pod/ftl-pg-cluster-1-0")
  dir: ./db

virtual k8s-ftl-controller: k8s-postgres
  < k8s-apply(manifest="ftl-controller.yml", resource="deployment/ftl-controller")
  dir: ./ftl-controller

# Build all release artefacts
virtual release: %{dest}/ftl %{dest}/ftl-* docker-ftl-*
  inputs: none

implicit %{dest}/@: cmd/@/*.go
  inputs: cmd/@/*.go
  build: go build -o %{dest}/@ cmd/@

'%{dest}/ftl':
  < go-cmd(pkg="./cmd/ftl")

%{dest}/ftl-controller:
  < go-cmd(pkg="./cmd/ftl-controller")

%{dest}/ftl-runner:
  < go-cmd(pkg="./cmd/ftl-runner")
  +build: echo "Runner built"

dist/*: src/** *.json *.ts *.js plop/**
  build: npm install && npm run build

protos/**/*.go console/client/src/protos/**/*.ts \
    backend/common/3rdparty/protos/**/*.go: protos/**.proto buf.work.yaml **/buf.yaml **/buf.gen.yaml
  build:
    buf format -w
    buf lint
    (cd protos && buf generate)
    (cd backend/common/3rdparty/protos && buf generate)

db.go models.go queries.sql.go \
    %(grep -q copyfrom queries.sql && echo copyfrom.go)%:
  inputs:
    sqlc.yaml
    schema/*.sql
    queries.sql
  build:
    sqlc generate -f ../../../../sqlc.yaml --experimental
    # sqlc 1.18.0 generates a file with a missing import
    gosimports -w querier.go

docker-ftl-runner:
  < docker(dockerfile="Dockerfile.runner", tag="ghcr.io/tbd54566975/ftl-runner:latest")

docker-ftl-controller:
  < docker(dockerfile="Dockerfile.controller", tag="ghcr.io/tbd54566975/ftl-controller:latest")

build/libs/ftl-runtime.jar: src/** build.gradle.kts gradle.properties settings.gradle.kts
  build: gradle jar

# Templates
template go-cmd(pkg):
  inputs: %(go list -f '{{ join .Deps "\n" }}' %{pkg} | grep github.com/TBD54566975/ftl | cut -d/ -f4-)%
  build: go build -tags release -ldflags "-X main.version=%{version}" -o %{output} %{pkg}

template k8s-apply(manifest, resource): %{manifest}
  hash: kubectl get -o yaml %{resource}
  build: kubectl apply -f %{manifest}
  delete: kubectl delete %{resource}

template docker(dockerfile, tag, context="."): %{dockerfile} %{context}
  hash: docker image inspect %{tag}
  build: docker build -f %{dockerfile} -t %{tag} %{context}
  delete: docker rmi %{tag}
